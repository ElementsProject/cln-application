{"version":3,"file":"static/js/948.256093c8.chunk.js","mappings":"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","sources":["components/modals/NodeInfo/NodeInfo.tsx","svgs/Add.tsx","components/modals/ConnectWallet/ConnectWallet.tsx","svgs/Password.tsx","svgs/Show.tsx","svgs/Hide.tsx","components/modals/Login/Login.tsx","components/modals/Logout/Logout.tsx","components/modals/SetPassword/SetPassword.tsx","components/App/App.tsx"],"sourcesContent":["import React from 'react';\n\nimport './NodeInfo.scss';\nimport { useContext, useEffect, useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { QRCodeCanvas } from 'qrcode.react';\nimport { Modal, Row, InputGroup, Form } from 'react-bootstrap';\n\nimport { CopySVG } from '../../../svgs/Copy';\nimport { ApplicationModes } from '../../../utilities/constants';\nimport { CloseSVG } from '../../../svgs/Close';\nimport logger from '../../../services/logger.service';\nimport { copyTextToClipboard } from '../../../utilities/data-formatters';\nimport { RootContext } from '../../../store/RootContext';\nimport { CLNContext } from '../../../store/CLNContext';\n\nconst NodeInfo = () => {\n  const rootCtx = useContext(RootContext);\n  const clnCtx = useContext(CLNContext);\n  const [nodeURI, setNodeURI] = useState('');\n\n  useEffect(() => {\n    let uri = (clnCtx.nodeInfo.id || '');\n    if (clnCtx.nodeInfo.address && clnCtx.nodeInfo.address?.length && clnCtx.nodeInfo.address.length > 0) {\n      uri = uri + '@' + clnCtx.nodeInfo.address[0].address + ':' + clnCtx.nodeInfo.address[0].port;\n    } else if (clnCtx.nodeInfo.binding && clnCtx.nodeInfo.binding?.length && clnCtx.nodeInfo.binding.length > 0) {\n      uri = uri + '@' + clnCtx.nodeInfo.binding[0].address + ':' + clnCtx.nodeInfo.binding[0].port;\n    } else {\n      uri = uri + '@ : ';\n    }\n    setNodeURI(uri);\n  }, [clnCtx]);\n\n  const copyHandler = () => {\n    copyTextToClipboard(nodeURI).then((response) => {\n      rootCtx.setShowToast({show: true, message: 'Node ID Copied Successfully!', bg: 'success'});\n    }).catch((err) => {\n      logger.error(err);\n    });\n  }\n\n  const closeHandler = () => {\n    rootCtx.setShowModals({...rootCtx.showModals, nodeInfoModal: false});\n  }\n\n  return (\n      <Modal show={rootCtx.showModals.nodeInfoModal} onHide={closeHandler} centered className='modal-lg' data-testid='node-info-modal'>\n        <Modal.Header className='d-flex align-items-start justify-content-end pb-0'>\n          <span className='span-close-svg' onClick={closeHandler}><CloseSVG /></span>\n        </Modal.Header>\n        <Modal.Body className='py-0'>\n          <Row className='qr-container m-auto d-flex'>\n            <AnimatePresence>\n              <motion.img\n                key='cln-logo'\n                alt='Core Lightning Logo'\n                src={rootCtx.appConfig.uiConfig.appMode === ApplicationModes.DARK ? '/images/cln-logo-dark.png' : '/images/cln-logo-light.png'}\n                className='qr-cln-logo'\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                transition={{ delay: 0.05, duration: 0.01 }}\n              />\n            </AnimatePresence>\n            <QRCodeCanvas value={nodeURI || ''} size={220} includeMargin={true} bgColor={rootCtx.appConfig.uiConfig.appMode === ApplicationModes.DARK ? '#0C0C0F' : '#FFFFFF'} fgColor={rootCtx.appConfig.uiConfig.appMode === ApplicationModes.DARK ? '#FFFFFF' : '#000000'} />\n          </Row>\n          <Row className='d-flex align-items-start justify-content-center pt-2'>\n            <h4 className='text-blue fw-bold d-flex justify-content-center'>Node ID</h4>\n            <p className='py-3 w-75 text-break text-dark d-flex justify-content-center'>\n              Other Lightning nodes can open payment channels to your node following this Node ID.            \n            </p>\n            <div className='mb-4 text-break text-dark d-flex justify-content-center'>\n            <InputGroup className='mb-3'>\n              <Form.Control \n                onClick={copyHandler}\n                placeholder={nodeURI}\n                aria-label={nodeURI}\n                aria-describedby='copy-addon'\n                className='form-control-left'\n                readOnly\n              />\n              <InputGroup.Text id={nodeURI} className='form-control-addon form-control-addon-right' onClick={copyHandler}>\n                <CopySVG id={nodeURI} />\n              </InputGroup.Text>\n            </InputGroup>\n            </div>\n          </Row>\n        </Modal.Body>\n      </Modal>\n  );  \n}\n\nexport default NodeInfo;\n","import React from 'react';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\n\nexport const AddSVG = props => {\n  return (\n    <OverlayTrigger\n      placement='auto'\n      delay={{ show: 250, hide: 250 }}\n      overlay={(props.showTooltip ? <Tooltip>{props.tooltipText || ''}</Tooltip> : <></>)}\n    >\n      <svg width='17' height='17' viewBox='0 0 17 17' fill='none' xmlns='http://www.w3.org/2000/svg'>\n        <path d='M1 8.5H16' stroke='#9F9F9F' strokeWidth='1.3' strokeLinecap='round' strokeLinejoin='round' />\n        <path d='M8.5 1V16' stroke='#9F9F9F' strokeWidth='1.3' strokeLinecap='round' strokeLinejoin='round' />\n      </svg>\n    </OverlayTrigger>\n  );\n};\n\n","import './ConnectWallet.scss';\nimport { useContext, useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { QRCodeCanvas } from 'qrcode.react';\nimport { Modal, Col, Row, Spinner, Dropdown, InputGroup, Form } from 'react-bootstrap';\n\nimport { ApplicationModes } from '../../../utilities/constants';\nimport { CopySVG } from '../../../svgs/Copy';\nimport { CloseSVG } from '../../../svgs/Close';\nimport { copyTextToClipboard } from '../../../utilities/data-formatters';\nimport { ConnectWalletFields } from '../../../types/app-config.type';\nimport logger from '../../../services/logger.service';\nimport useHttp from '../../../hooks/use-http';\nimport { AddSVG } from '../../../svgs/Add';\nimport { RootContext } from '../../../store/RootContext';\n\nconst ConnectWallet = () => {\n  const rootCtx = useContext(RootContext);\n  const { createInvoiceRune } = useHttp();\n  const [networkTypes, setNetworkTypes] = useState<string[]>(['LN Message', 'LN Message (Tor)']);\n  const [selNetwork, setSelNetwork] = useState('LN Message');\n  const [connectUrl, setConnectUrl] = useState('');\n  const initialConnectValues: ConnectWalletFields = { port: { title: 'Websocket Port', field: 'LIGHTNING_WS_PORT' }, host: { title: 'CLN Host', field: 'DEVICE_DOMAIN_NAME' }, rune: { title: 'Rune', field: 'COMMANDO_RUNE' }, invoiceRune: { title: 'Invoice Rune', field: 'INVOICE_RUNE' }, connectUrl: { title: 'Lnmessage URL', field: '' } };\n  const [connectValues, setConnectValues] = useState(initialConnectValues);\n  const [isLoadingInvoiceRune, setIsLoadingInvoiceRune] = useState(false);\n\n  useEffect(() => {\n    let newNetworkTypes: string[] = ['LN Message', 'LN Message (Tor)'];\n    if (rootCtx.walletConnect.LIGHTNING_REST_PORT && rootCtx.walletConnect.LIGHTNING_REST_PORT !== '') {\n      newNetworkTypes.push('REST');\n      if (rootCtx.walletConnect.TOR_SERVICE && rootCtx.walletConnect.TOR_SERVICE !== '') {\n        newNetworkTypes.push('REST (Tor)');\n      }\n    }\n    if (rootCtx.walletConnect.LIGHTNING_GRPC_PORT && rootCtx.walletConnect.LIGHTNING_GRPC_PORT !== '') {\n      newNetworkTypes.push('gRPC');\n      if (rootCtx.walletConnect.TOR_SERVICE && rootCtx.walletConnect.TOR_SERVICE !== '') {\n        newNetworkTypes.push('gRPC (Tor)');\n      }\n    }\n    setNetworkTypes(newNetworkTypes);\n    if (selNetwork === 'LN Message') {\n      setConnectUrl('ln-message://' + rootCtx.walletConnect.DEVICE_DOMAIN_NAME + ':' + rootCtx.walletConnect.LIGHTNING_WS_PORT + '?rune=' + rootCtx.walletConnect.COMMANDO_RUNE + (rootCtx.walletConnect.INVOICE_RUNE !== '' ? '&invoiceRune=' + rootCtx.walletConnect.INVOICE_RUNE : ''));\n    }\n  }, [rootCtx, selNetwork]);\n\n  const copyHandler = (event) => {\n    let textToCopy = '';\n    switch (event.target.id) {\n      case 'Websocket Port':\n        textToCopy = rootCtx.walletConnect.LIGHTNING_WS_PORT || '';\n        break;\n      case 'gRPC Port':\n        textToCopy = rootCtx.walletConnect.LIGHTNING_GRPC_PORT || '';\n        break;\n      case 'REST Port':\n        textToCopy = rootCtx.walletConnect.LIGHTNING_REST_PORT || '';\n        break;\n      case 'CLN Host':\n        textToCopy = (selNetwork.includes('(Tor)') ? rootCtx.walletConnect.TOR_SERVICE : rootCtx.walletConnect.DEVICE_DOMAIN_NAME) || '';\n        break;\n      case 'Rune':\n        textToCopy = rootCtx.walletConnect.COMMANDO_RUNE || '';\n        break;\n      case 'Invoice Rune':\n        textToCopy = rootCtx.walletConnect.INVOICE_RUNE || '';\n        break;\n      case 'Client Key':\n        textToCopy = rootCtx.walletConnect.CLIENT_KEY || '';\n        break;\n      case 'Client Cert':\n        textToCopy = rootCtx.walletConnect.CLIENT_CERT || '';\n        break;\n      case 'CA Cert':\n        textToCopy = rootCtx.walletConnect.CA_CERT || '';\n        break;\n      default:\n        textToCopy = connectUrl || '';\n        break;\n    }\n    copyTextToClipboard(textToCopy).then((response) => {\n      rootCtx.setShowToast({ show: true, message: (event.target.id + ' Copied Successfully!'), bg: 'success' });\n    }).catch((err) => {\n      logger.error(err);\n    });\n  }\n\n  const createInvoiceRuneHandler = () => {\n    setIsLoadingInvoiceRune(true);\n    createInvoiceRune()\n      .then(() => {\n        rootCtx.setShowToast({ show: true, message: ('Created Invoice Rune Successfully!'), bg: 'success' });\n      })\n      .catch(err => {\n        logger.error(err.message || JSON.stringify(err));\n        rootCtx.setShowToast({ show: true, message: (`Error Creating Invoice Rune: ${err.message || ''}`), bg: 'danger' });\n      })\n      .finally(() => {\n        setIsLoadingInvoiceRune(false);\n      });\n  }\n\n  const closeHandler = () => {\n    rootCtx.setShowModals({ ...rootCtx.showModals, connectWalletModal: false });\n  }\n\n  const networkChangeHandler = (event) => {\n    setSelNetwork(event.target.id);\n    switch (event.target.id) {\n      case 'LN Message':\n        setConnectValues({ port: { title: 'Websocket Port', field: 'LIGHTNING_WS_PORT' }, host: { title: 'CLN Host', field: 'DEVICE_DOMAIN_NAME' }, rune: { title: 'Rune', field: 'COMMANDO_RUNE' }, invoiceRune: { title: 'Invoice Rune', field: 'INVOICE_RUNE' }, connectUrl: { title: 'Lnmessage URL', field: '' } });\n        setConnectUrl('ln-message://' + rootCtx.walletConnect.DEVICE_DOMAIN_NAME + ':' + rootCtx.walletConnect.LIGHTNING_WS_PORT + '?rune=' + rootCtx.walletConnect.COMMANDO_RUNE + (rootCtx.walletConnect.INVOICE_RUNE !== '' ? '&invoiceRune=' + rootCtx.walletConnect.INVOICE_RUNE : ''));\n        break;\n\n      case 'LN Message (Tor)':\n        setConnectValues({ port: { title: 'Websocket Port', field: 'LIGHTNING_WS_PORT' }, host: { title: 'CLN Host', field: 'TOR_SERVICE' }, rune: { title: 'Rune', field: 'COMMANDO_RUNE' }, invoiceRune: { title: 'Invoice Rune', field: 'INVOICE_RUNE' }, connectUrl: { title: 'Lnmessage URL', field: '' } });\n        setConnectUrl('ln-message://' + rootCtx.walletConnect.TOR_SERVICE + ':' + rootCtx.walletConnect.LIGHTNING_WS_PORT + '?rune=' + rootCtx.walletConnect.COMMANDO_RUNE + (rootCtx.walletConnect.INVOICE_RUNE !== '' ? '&invoiceRune=' + rootCtx.walletConnect.INVOICE_RUNE : ''));\n        break;\n\n      case 'REST':\n        setConnectValues({ protocol: { title: 'REST Protocol', field: 'LIGHTNING_REST_PROTOCOL' }, host: { title: 'CLN Host', field: 'DEVICE_DOMAIN_NAME' }, port: { title: 'REST Port', field: 'LIGHTNING_REST_PORT' }, clientKey: { title: 'Client Key', field: 'CLIENT_KEY' }, clientCert: { title: 'Client Cert', field: 'CLIENT_CERT' }, caCert: { title: 'CA Cert', field: 'CA_CERT' }, connectUrl: { title: 'REST URL', field: '' } });\n        setConnectUrl('clnrest://' + rootCtx.walletConnect.LIGHTNING_REST_PROTOCOL + '://' + rootCtx.walletConnect.DEVICE_DOMAIN_NAME + ':' + rootCtx.walletConnect.LIGHTNING_REST_PORT + (rootCtx.walletConnect.LIGHTNING_REST_PROTOCOL?.toLowerCase() === 'https' ? '?clientKey=' + rootCtx.walletConnect.CLIENT_KEY + '&clientCert=' + rootCtx.walletConnect.CLIENT_CERT + '&caCert=' + rootCtx.walletConnect.CA_CERT : ''));\n        break;\n\n      case 'REST (Tor)':\n        setConnectValues({ protocol: { title: 'REST Protocol', field: 'LIGHTNING_REST_PROTOCOL' }, host: { title: 'CLN Host', field: 'TOR_SERVICE' }, port: { title: 'REST Port', field: 'LIGHTNING_REST_PORT' }, clientKey: { title: 'Client Key', field: 'CLIENT_KEY' }, clientCert: { title: 'Client Cert', field: 'CLIENT_CERT' }, caCert: { title: 'CA Cert', field: 'CA_CERT' }, connectUrl: { title: 'REST URL', field: '' } });\n        setConnectUrl('clnrest://' + rootCtx.walletConnect.LIGHTNING_REST_PROTOCOL + '://' + rootCtx.walletConnect.TOR_SERVICE + ':' + rootCtx.walletConnect.LIGHTNING_REST_PORT + (rootCtx.walletConnect.LIGHTNING_REST_PROTOCOL?.toLowerCase() === 'https' ? '?clientKey=' + rootCtx.walletConnect.CLIENT_KEY + '&clientCert=' + rootCtx.walletConnect.CLIENT_CERT + '&caCert=' + rootCtx.walletConnect.CA_CERT : ''));\n        break;\n\n      case 'gRPC':\n        setConnectValues({ protocol: { title: 'gRPC Protocol', field: 'LIGHTNING_GRPC_PROTOCOL' }, host: { title: 'CLN Host', field: 'DEVICE_DOMAIN_NAME' }, port: { title: 'GRPC Port', field: 'LIGHTNING_GRPC_PORT' }, clientKey: { title: 'Client Key', field: 'CLIENT_KEY' }, clientCert: { title: 'Client Cert', field: 'CLIENT_CERT' }, caCert: { title: 'CA Cert', field: 'CA_CERT' }, connectUrl: { title: 'gRPC URL', field: '' } });\n        setConnectUrl('cln-grpc://' + rootCtx.walletConnect.LIGHTNING_GRPC_PROTOCOL + '://' + rootCtx.walletConnect.DEVICE_DOMAIN_NAME + ':' + rootCtx.walletConnect.LIGHTNING_GRPC_PORT + (rootCtx.walletConnect.LIGHTNING_GRPC_PROTOCOL?.toLowerCase() === 'https' ? '?clientKey=' + rootCtx.walletConnect.CLIENT_KEY + '&clientCert=' + rootCtx.walletConnect.CLIENT_CERT + '&caCert=' + rootCtx.walletConnect.CA_CERT : ''));\n        break;\n\n      case 'gRPC (Tor)':\n        setConnectValues({ protocol: { title: 'gRPC Protocol', field: 'LIGHTNING_GRPC_PROTOCOL' }, host: { title: 'CLN Host', field: 'TOR_SERVICE' }, port: { title: 'GRPC Port', field: 'LIGHTNING_GRPC_PORT' }, clientKey: { title: 'Client Key', field: 'CLIENT_KEY' }, clientCert: { title: 'Client Cert', field: 'CLIENT_CERT' }, caCert: { title: 'CA Cert', field: 'CA_CERT' }, connectUrl: { title: 'gRPC URL', field: '' } });\n        setConnectUrl('cln-grpc://' + rootCtx.walletConnect.LIGHTNING_GRPC_PROTOCOL + '://' + rootCtx.walletConnect.TOR_SERVICE + ':' + rootCtx.walletConnect.LIGHTNING_GRPC_PORT + (rootCtx.walletConnect.LIGHTNING_GRPC_PROTOCOL?.toLowerCase() === 'https' ? '?clientKey=' + rootCtx.walletConnect.CLIENT_KEY + '&clientCert=' + rootCtx.walletConnect.CLIENT_CERT + '&caCert=' + rootCtx.walletConnect.CA_CERT : ''));\n        break;\n\n      default:\n        setConnectValues({ port: { title: 'Websocket Port', field: 'LIGHTNING_WS_PORT' }, host: { title: 'CLN Host', field: 'DEVICE_DOMAIN_NAME' }, rune: { title: 'Rune', field: 'COMMANDO_RUNE' }, invoiceRune: { title: 'Invoice Rune', field: 'INVOICE_RUNE' }, connectUrl: { title: 'Lnmessage URL', field: '' } });\n        setConnectUrl('ln-message://' + rootCtx.walletConnect.DEVICE_DOMAIN_NAME + ':' + rootCtx.walletConnect.LIGHTNING_WS_PORT + '?rune=' + rootCtx.walletConnect.COMMANDO_RUNE + (rootCtx.walletConnect.INVOICE_RUNE !== '' ? '&invoiceRune=' + rootCtx.walletConnect.INVOICE_RUNE : ''));\n        break;\n    }\n  }\n\n  let invoiceRuneClickHandler;\n  let InvoiceRuneSvg;\n\n  if (selNetwork === 'LN Message' || selNetwork === 'LN Message (Tor)') {\n    if (rootCtx.walletConnect.INVOICE_RUNE && rootCtx.walletConnect.INVOICE_RUNE !== '') {\n      invoiceRuneClickHandler = copyHandler;\n      InvoiceRuneSvg = CopySVG;\n    } else {\n      invoiceRuneClickHandler = createInvoiceRuneHandler;\n      InvoiceRuneSvg = AddSVG;\n    }\n  }\n\n  return (\n    <>\n      <Modal show={rootCtx.showModals.connectWalletModal} onHide={closeHandler} centered className='modal-lg' data-testid='connect-wallet'>\n        <Modal.Header className='d-flex align-items-start justify-content-end pb-0'>\n          <span className='span-close-svg' onClick={closeHandler}><CloseSVG /></span>\n        </Modal.Header>\n        <Modal.Body className='py-0 px-4'>\n          <Row className='qr-container m-auto d-flex'>\n            <AnimatePresence>\n              <motion.img\n                key='cln-logo'\n                alt='Core Lightning Logo'\n                src={rootCtx.appConfig.uiConfig.appMode === ApplicationModes.DARK ? '/images/cln-logo-dark.png' : '/images/cln-logo-light.png'}\n                className='qr-cln-logo'\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                transition={{ delay: 0.05, duration: 0.01 }}\n              />\n            </AnimatePresence>\n            <QRCodeCanvas value={connectUrl} size={220} includeMargin={true} bgColor={rootCtx.appConfig.uiConfig.appMode === ApplicationModes.DARK ? '#0C0C0F' : '#FFFFFF'} fgColor={rootCtx.appConfig.uiConfig.appMode === ApplicationModes.DARK ? '#FFFFFF' : '#000000'} />\n          </Row>\n          <Row className='d-flex align-items-start justify-content-center pt-2'>\n            <h4 className='w-100 text-blue fw-semibold d-flex justify-content-center text-center'>\n              Connect wallet to your node\n            </h4>\n          </Row>\n          <Row className='d-flex align-items-start justify-content-center'>\n            <Col xs={selNetwork.includes('LN Message') ? 12 : 6}>\n              <Form.Label className='text-light'>Network</Form.Label>\n              <Dropdown className='dropdown-network mt-1 mb-2'>\n                <Dropdown.Toggle variant='secondary' id='network' className='w-100 d-flex align-items-center justify-content-between' data-testid='network-toggle'>\n                  {selNetwork}\n                </Dropdown.Toggle>\n                <Dropdown.Menu data-testid='network-menu'>\n                  {networkTypes.map((type) =>\n                    <Dropdown.Item data-testid='network-item' as='div' key={type} id={type} onClick={networkChangeHandler}>{type}</Dropdown.Item>\n                  )}\n                </Dropdown.Menu>\n              </Dropdown>\n            </Col>\n            {!selNetwork.includes('LN Message') && connectValues.protocol ?\n              <Col xs={6}>\n                <Form.Label className='text-light'>{connectValues.protocol.title}</Form.Label>\n                <InputGroup className='mb-2'>\n                  <Form.Control\n                    onClick={copyHandler}\n                    id={connectValues.protocol.title}\n                    value={rootCtx.walletConnect[connectValues.protocol.field]}\n                    aria-label={rootCtx.walletConnect[connectValues.protocol.field]}\n                    aria-describedby='copy-addon-port'\n                    className='form-control-left'\n                    data-testid='port'\n                    readOnly\n                  />\n                  <InputGroup.Text id={connectValues.port.title} className='form-control-addon form-control-addon-right' onClick={copyHandler}>\n                    <CopySVG id={connectValues.port.title} />\n                  </InputGroup.Text>\n                </InputGroup>\n              </Col> : <Col xs={6}></Col>\n            }\n          </Row>\n          <Row className='d-flex align-items-start justify-content-center'>\n            <Col xs={6}>\n              <Form.Label className='text-light'>{connectValues.host.title}</Form.Label>\n              <InputGroup className='mb-2'>\n                <Form.Control\n                  onClick={copyHandler}\n                  id={connectValues.host.title}\n                  value={rootCtx.walletConnect[connectValues.host.field]}\n                  aria-label={rootCtx.walletConnect[connectValues.host.field]}\n                  aria-describedby='copy-addon-host'\n                  className='form-control-left'\n                  data-testid='host'\n                  readOnly\n                />\n                <InputGroup.Text id={connectValues.host.title} className='form-control-addon form-control-addon-right' onClick={copyHandler}>\n                  <CopySVG id={connectValues.host.title} />\n                </InputGroup.Text>\n              </InputGroup>\n            </Col>\n            <Col xs={6}>\n              <Form.Label className='text-light'>{connectValues.port.title}</Form.Label>\n              <InputGroup className='mb-2'>\n                <Form.Control\n                  onClick={copyHandler}\n                  id={connectValues.port.title}\n                  value={rootCtx.walletConnect[connectValues.port.field]}\n                  aria-label={rootCtx.walletConnect[connectValues.port.field]}\n                  aria-describedby='copy-addon-port'\n                  className='form-control-left'\n                  data-testid='port'\n                  readOnly\n                />\n                <InputGroup.Text id={connectValues.port.title} className='form-control-addon form-control-addon-right' onClick={copyHandler}>\n                  <CopySVG id={connectValues.port.title} />\n                </InputGroup.Text>\n              </InputGroup>\n            </Col>\n          </Row>\n          {(selNetwork !== 'gRPC' && selNetwork !== 'gRPC (Tor)') && connectValues.rune ?\n            <Row className='d-flex align-items-start justify-content-center'>\n              <Col xs={12}>\n                <Form.Label className='text-light'>{connectValues.rune.title}</Form.Label>\n                <InputGroup className='mb-2'>\n                  <Form.Control\n                    onClick={copyHandler}\n                    id={connectValues.rune.title}\n                    value={rootCtx.walletConnect[connectValues.rune.field]}\n                    aria-label={rootCtx.walletConnect[connectValues.rune.field]}\n                    aria-describedby='copy-addon-rune'\n                    className='form-control-left'\n                    data-testid='rune'\n                    readOnly\n                  />\n                  <InputGroup.Text id={connectValues.rune.title} className='form-control-addon form-control-addon-right' onClick={copyHandler}>\n                    <CopySVG id={connectValues.rune.title} />\n                  </InputGroup.Text>\n                </InputGroup>\n              </Col>\n            </Row> : <></>\n          }\n          {(selNetwork === 'LN Message' || selNetwork === 'LN Message (Tor)') && (\n            <Row className='d-flex align-items-start justify-content-center'>\n              <Col xs={12}>\n                <Form.Label className='text-light'>{connectValues.invoiceRune?.title}</Form.Label>\n                <InputGroup className='mb-2'>\n                  <Form.Control\n                    onClick={invoiceRuneClickHandler}\n                    id={connectValues.invoiceRune?.title}\n                    value={rootCtx.walletConnect['INVOICE_RUNE']}\n                    placeholder='Not Found'\n                    aria-label={rootCtx.walletConnect['INVOICE_RUNE']}\n                    disabled={isLoadingInvoiceRune}\n                    aria-describedby='copy-addon-rune'\n                    className='form-control-left'\n                    data-testid='invoice-rune'\n                    readOnly\n                  />\n                  <InputGroup.Text id={connectValues.invoiceRune?.title} className='form-control-addon form-control-addon-right' onClick={!isLoadingInvoiceRune ? invoiceRuneClickHandler : undefined} data-testid='invoice-rune-button'>\n                    {isLoadingInvoiceRune ?\n                      <span className='h-100 d-flex justify-content-center align-items-center'>\n                        <Spinner className='me-1' variant='light' size='sm' data-testid='invoice-rune-spinner' />\n                      </span>\n                      : InvoiceRuneSvg && <InvoiceRuneSvg id={connectValues.invoiceRune?.title} showTooltip={rootCtx.walletConnect.INVOICE_RUNE === ''} tooltipText={'Create New Invoice Rune'} />\n                    }\n                  </InputGroup.Text>\n                </InputGroup>\n              </Col>\n            </Row>\n          )\n          }\n          {(selNetwork.includes('REST') && rootCtx.walletConnect.LIGHTNING_REST_PROTOCOL?.toLowerCase() === 'https') || \n            (selNetwork.includes('gRPC') && rootCtx.walletConnect.LIGHTNING_GRPC_PROTOCOL?.toLowerCase() === 'https') ?\n            <>\n            <Row className='d-flex align-items-start justify-content-center'>\n              <Col xs={12}>\n                <Form.Label className='text-light'>{connectValues.clientKey?.title}</Form.Label>\n                <InputGroup className='mb-2'>\n                  <Form.Control\n                    onClick={copyHandler}\n                    id={connectValues.clientKey?.title}\n                    value={rootCtx.walletConnect['CLIENT_KEY']}\n                    aria-label={rootCtx.walletConnect['CLIENT_KEY']}\n                    aria-describedby='copy-addon-host'\n                    className='form-control-left'\n                    data-testid='client-key'\n                    readOnly\n                  />\n                  <InputGroup.Text id={connectValues.clientKey?.title} className='form-control-addon form-control-addon-right' onClick={copyHandler}>\n                    <CopySVG id={connectValues.clientKey?.title} />\n                  </InputGroup.Text>\n                </InputGroup>\n              </Col>\n            </Row>\n            <Row className='d-flex align-items-start justify-content-center'>\n              <Col xs={12}>\n                <Form.Label className='text-light'>{connectValues.clientCert?.title}</Form.Label>\n                <InputGroup className='mb-2'>\n                  <Form.Control\n                    onClick={copyHandler}\n                    id={connectValues.clientCert?.title}\n                    value={rootCtx.walletConnect['CLIENT_CERT']}\n                    aria-label={rootCtx.walletConnect['CLIENT_CERT']}\n                    aria-describedby='copy-addon-host'\n                    className='form-control-left'\n                    data-testid='client-cert'\n                    readOnly\n                  />\n                  <InputGroup.Text id={connectValues.clientCert?.title} className='form-control-addon form-control-addon-right' onClick={copyHandler}>\n                    <CopySVG id={connectValues.clientCert?.title} />\n                  </InputGroup.Text>\n                </InputGroup>\n              </Col>\n            </Row>\n            </>\n            :\n            <></>\n          }\n          {(selNetwork === 'REST' && rootCtx.walletConnect.LIGHTNING_REST_PROTOCOL?.toLowerCase() === 'https') || \n            (selNetwork === 'gRPC' && rootCtx.walletConnect.LIGHTNING_GRPC_PROTOCOL?.toLowerCase() === 'https') ?\n            <Row className='d-flex align-items-start justify-content-center'>\n              <Col xs={12}>\n                <Form.Label className='text-light'>{connectValues.caCert?.title}</Form.Label>\n                <InputGroup className='mb-2'>\n                  <Form.Control\n                    onClick={copyHandler}\n                    id={connectValues.caCert?.title}\n                    value={rootCtx.walletConnect['CA_CERT']}\n                    aria-label={rootCtx.walletConnect['CA_CERT']}\n                    aria-describedby='copy-addon-host'\n                    className='form-control-left'\n                    data-testid='ca-cert'\n                    readOnly\n                  />\n                  <InputGroup.Text id={connectValues.caCert?.title} className='form-control-addon form-control-addon-right' onClick={copyHandler}>\n                    <CopySVG id={connectValues.caCert?.title} />\n                  </InputGroup.Text>\n                </InputGroup>\n              </Col>\n            </Row>\n            :\n            <></>\n          }\n          <Row className='mb-4 d-flex align-items-start justify-content-center'>\n            <Col xs={12}>\n              <Form.Label className='text-light'>{connectValues.connectUrl?.title}</Form.Label>\n              <InputGroup className='mb-2'>\n                <Form.Control\n                  onClick={copyHandler}\n                  id={connectValues.connectUrl?.title}\n                  value={connectUrl || ''}\n                  aria-label={connectUrl || ''}\n                  aria-describedby='copy-addon-rune'\n                  className='form-control-left'\n                  data-testid='connect-url'\n                  readOnly\n                />\n                <InputGroup.Text id={connectValues.connectUrl?.title} className='form-control-addon form-control-addon-right' onClick={copyHandler}>\n                  <CopySVG id={connectValues.connectUrl?.title} />\n                </InputGroup.Text>\n              </InputGroup>\n            </Col>\n          </Row>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n}\n\nexport default ConnectWallet;\n","import React from 'react';\n\nexport const PasswordSVG = props => {\n  return (\n    // Font Awesome Free 6.4.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc.\n    <svg \n      xmlns='http://www.w3.org/2000/svg'\n      height='16'\n      viewBox='0 0 512 512'\n      fill='none'\n      className={props.className}\n    >\n      <path className='fill-body-color' d='M336 352c97.2 0 176-78.8 176-176S433.2 0 336 0S160 78.8 160 176c0 18.7 2.9 36.8 8.3 53.7L7 391c-4.5 4.5-7 10.6-7 17v80c0 13.3 10.7 24 24 24h80c13.3 0 24-10.7 24-24V448h40c13.3 0 24-10.7 24-24V384h40c6.4 0 12.5-2.5 17-7l33.3-33.3c16.9 5.4 35 8.3 53.7 8.3zM376 96a40 40 0 1 1 0 80 40 40 0 1 1 0-80z'/>\n    </svg>\n  );\n};\n","import React from 'react';\n\nexport const ShowSVG = props => {\n  return (\n    // Font Awesome Free 6.4.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc.\n    <svg\n      className={props.className}\n      // width='16'\n      height='16'\n      viewBox='0 0 576 512'\n      fill='none'\n      xmlns='http://www.w3.org/2000/svg'\n    >\n      <path className='fill-body-color' d='M288 80c-65.2 0-118.8 29.6-159.9 67.7C89.6 183.5 63 226 49.4 256c13.6 30 40.2 72.5 78.6 108.3C169.2 402.4 222.8 432 288 432s118.8-29.6 159.9-67.7C486.4 328.5 513 286 526.6 256c-13.6-30-40.2-72.5-78.6-108.3C406.8 109.6 353.2 80 288 80zM95.4 112.6C142.5 68.8 207.2 32 288 32s145.5 36.8 192.6 80.6c46.8 43.5 78.1 95.4 93 131.1c3.3 7.9 3.3 16.7 0 24.6c-14.9 35.7-46.2 87.7-93 131.1C433.5 443.2 368.8 480 288 480s-145.5-36.8-192.6-80.6C48.6 356 17.3 304 2.5 268.3c-3.3-7.9-3.3-16.7 0-24.6C17.3 208 48.6 156 95.4 112.6zM288 336c44.2 0 80-35.8 80-80s-35.8-80-80-80c-.7 0-1.3 0-2 0c1.3 5.1 2 10.5 2 16c0 35.3-28.7 64-64 64c-5.5 0-10.9-.7-16-2c0 .7 0 1.3 0 2c0 44.2 35.8 80 80 80zm0-208a128 128 0 1 1 0 256 128 128 0 1 1 0-256z'/>\n    </svg>\n  );\n};\n","import React from 'react';\n\nexport const HideSVG = props => {\n  return (\n    // Font Awesome Free 6.4.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc.\n    <svg\n      className={props.className}\n      // width='16'\n      height='16'\n      viewBox='0 0 640 512'\n      fill='none'\n      xmlns='http://www.w3.org/2000/svg'\n    >\n      <path className='fill-body-color' d='M38.8 5.1C28.4-3.1 13.3-1.2 5.1 9.2S-1.2 34.7 9.2 42.9l592 464c10.4 8.2 25.5 6.3 33.7-4.1s6.3-25.5-4.1-33.7L525.6 386.7c39.6-40.6 66.4-86.1 79.9-118.4c3.3-7.9 3.3-16.7 0-24.6c-14.9-35.7-46.2-87.7-93-131.1C465.5 68.8 400.8 32 320 32c-68.2 0-125 26.3-169.3 60.8L38.8 5.1zm151 118.3C226 97.7 269.5 80 320 80c65.2 0 118.8 29.6 159.9 67.7C518.4 183.5 545 226 558.6 256c-12.6 28-36.6 66.8-70.9 100.9l-53.8-42.2c9.1-17.6 14.2-37.5 14.2-58.7c0-70.7-57.3-128-128-128c-32.2 0-61.7 11.9-84.2 31.5l-46.1-36.1zM394.9 284.2l-81.5-63.9c4.2-8.5 6.6-18.2 6.6-28.3c0-5.5-.7-10.9-2-16c.7 0 1.3 0 2 0c44.2 0 80 35.8 80 80c0 9.9-1.8 19.4-5.1 28.2zm9.4 130.3C378.8 425.4 350.7 432 320 432c-65.2 0-118.8-29.6-159.9-67.7C121.6 328.5 95 286 81.4 256c8.3-18.4 21.5-41.5 39.4-64.8L83.1 161.5C60.3 191.2 44 220.8 34.5 243.7c-3.3 7.9-3.3 16.7 0 24.6c14.9 35.7 46.2 87.7 93 131.1C174.5 443.2 239.2 480 320 480c47.8 0 89.9-12.9 126.2-32.5l-41.9-33zM192 256c0 70.7 57.3 128 128 128c13.3 0 26.1-2 38.2-5.8L302 334c-23.5-5.4-43.1-21.2-53.7-42.3l-56.1-44.2c-.2 2.8-.3 5.6-.3 8.5z'/>\n    </svg>\n  );\n};\n","import React from 'react';\n\nimport './Login.scss';\nimport { useContext, useState } from 'react';\nimport SHA256 from \"crypto-js/sha256\";\nimport { Modal, Col, Row, Spinner, InputGroup, Form } from 'react-bootstrap';\n\nimport logger from '../../../services/logger.service';\nimport useInput from '../../../hooks/use-input';\nimport useHttp from '../../../hooks/use-http';\nimport { CallStatus } from '../../../utilities/constants';\nimport { ActionSVG } from '../../../svgs/Action';\nimport InvalidInputMessage from '../../shared/InvalidInputMessage/InvalidInputMessage';\nimport { PasswordSVG } from '../../../svgs/Password';\nimport StatusAlert from '../../shared/StatusAlert/StatusAlert';\nimport { ShowSVG } from '../../../svgs/Show';\nimport { HideSVG } from '../../../svgs/Hide';\nimport { RootContext } from '../../../store/RootContext';\n\nconst LoginComponent = () => {\n  const rootCtx = useContext(RootContext);\n  const { userLogin, initiateDataLoading } = useHttp();\n  const [hidePassword, setHidePassword] = useState(true);\n  const [responseStatus, setResponseStatus] = useState(CallStatus.NONE);\n  const [responseMessage, setResponseMessage] = useState('');\n\n  const isValidPassword = (value) => value.trim() !== '';\n\n  const {\n    value: passwordValue,\n    isValid: passwordIsValid,\n    hasError: passwordHasError,\n    valueChangeHandler: passwordChangeHandler,\n    inputBlurHandler: passwordBlurHandler,\n    reset: resetPassword,\n  } = useInput(isValidPassword);\n\n  let formIsValid = false;\n\n  if (passwordIsValid) {\n    formIsValid = true;\n  };\n  \n  const touchFormControls = () => {\n    passwordBlurHandler(null);\n  };\n\n  const resetFormValues = () => {\n    resetPassword();\n  };\n\n  const loginHandler = (event) => {\n    touchFormControls();\n    if (!formIsValid) { return; }\n    setResponseStatus(CallStatus.PENDING);\n    setResponseMessage('Logging In...');\n    userLogin(SHA256(passwordValue).toString())\n    .then((response: any) => {\n      logger.info(response);\n      if (response) {\n        setHidePassword(true);\n        setResponseStatus(CallStatus.NONE);\n        setResponseMessage('');\n        resetFormValues();\n        initiateDataLoading();\n        rootCtx.setShowModals({...rootCtx.showModals, loginModal: false});\n      } else {\n        setResponseStatus(CallStatus.ERROR);\n        setResponseMessage(response.response.data || response.message || 'Unknown Error');\n      }\n    })\n    .catch(err => {\n      logger.error(err.response?.data || err.message || JSON.stringify(err));\n      setResponseStatus(CallStatus.ERROR);\n      setResponseMessage(err.response && err.response.data && err.response.data.error ? err.response.data.error : err.response?.data || err.message || JSON.stringify(err));\n    });\n  };\n\n  const togglePasswordVisibility = () => {\n    setHidePassword(!hidePassword);\n  };\n\n  return (\n    <form className='h-100'>\n      <Modal show={rootCtx.showModals.loginModal} centered className='modal-lg' data-testid='login-modal'>\n        <Modal.Header className='d-flex align-items-start justify-content-start pb-0'></Modal.Header>\n        <Modal.Body className='py-0'>\n          <Row className='d-flex align-items-start justify-content-center'>\n            <Col xs={12}>\n              <Form.Label className=' text-dark'>Password*</Form.Label>\n              <InputGroup className={(passwordHasError ? 'invalid ' : '')}>\n                <InputGroup.Text className='form-control-addon form-control-addon-left'>\n                  <PasswordSVG />\n                </InputGroup.Text>\n                <Form.Control\n                  tabIndex={1}\n                  autoFocus={true}\n                  id='password'\n                  type={hidePassword ? 'password' : 'text'}\n                  placeholder='Password'\n                  aria-label='password'\n                  aria-describedby='addon-password'\n                  className={(hidePassword && passwordValue !== '') ? 'form-control-middle password-input-ctrl' : 'form-control-middle'}\n                  value={passwordValue}\n                  onChange={passwordChangeHandler}\n                  onBlur={passwordBlurHandler}\n                />\n                <InputGroup.Text className={'form-control-addon form-control-addon-right'}>\n                  <span onClick={() => togglePasswordVisibility()}>{hidePassword ? <ShowSVG /> : <HideSVG />}</span>\n                </InputGroup.Text>\n              </InputGroup>\n              {(passwordHasError) ?\n                  <InvalidInputMessage message={'Invalid Password'} />\n                :\n                  <div className='message'></div>\n              }\n            </Col>\n          </Row>\n          <StatusAlert responseStatus={responseStatus} responseMessage={responseMessage} />\n        </Modal.Body>\n        <Modal.Footer>\n          <button tabIndex={2} type='button' className='btn-rounded bg-primary' onClick={loginHandler} disabled={responseStatus === CallStatus.PENDING}>\n            Login\n            {responseStatus === CallStatus.PENDING ? <Spinner className='mt-1 ms-2 text-white-dark' size='sm' /> : <ActionSVG className='ms-3' />}\n          </button>\n        </Modal.Footer>\n      </Modal>\n    </form>\n  );\n}\n\nexport default LoginComponent;\n","import React from 'react';\n\nimport './Logout.scss';\nimport { useContext } from 'react';\nimport { Modal, Col } from 'react-bootstrap';\n\nimport useHttp from '../../../hooks/use-http';\nimport { QuestionMarkSVG } from '../../../svgs/QuestionMark';\nimport { RootContext } from '../../../store/RootContext';\n\nconst LogoutComponent = () => {\n  const rootCtx = useContext(RootContext);\n  const { userLogout } = useHttp();\n\n  const logoutHandler = (event) => {\n    if (event === true) {\n      userLogout();\n    }\n    closeHandler();\n  };\n\n  const closeHandler = () => {\n    rootCtx.setShowModals({...rootCtx.showModals, logoutModal: false});\n  }\n\n  return (\n    <form className='h-100'>\n      <Modal show={rootCtx.showModals.logoutModal} onHide={closeHandler} centered className='modal-lg' data-testid='logout-modal'>\n        <Modal.Body className='p-0 w-100 d-flex align-items-start justify-content-start'>\n          <Col className='d-flex align-items-stretch justify-content-between modal-box'>\n            <Col xs={2} className='message-type-box d-flex align-items-center justify-content-center'>\n              <QuestionMarkSVG />\n            </Col>\n            <Col xs={10} className='p-3'>\n              <Col className='d-flex align-items-center justify-content-between'>\n                <Col xs={7} className='ps-1'>Logout?</Col>\n                <button type=\"button\" className=\"btn btn-rounded btn-sm btn-secondary\" onClick={() => logoutHandler(true)}>Yes</button>\n                <button type=\"button\" className=\"btn btn-rounded btn-sm btn-secondary\" onClick={() => logoutHandler(false)}>No</button>\n              </Col>\n            </Col>\n          </Col>\n        </Modal.Body>\n      </Modal>\n    </form>\n  );\n}\n\nexport default LogoutComponent;\n","import React from 'react';\n\nimport './SetPassword.scss';\nimport { useContext, useState } from 'react';\nimport SHA256 from \"crypto-js/sha256\";\nimport { Modal, Col, Row, Spinner, InputGroup, Form } from 'react-bootstrap';\n\nimport logger from '../../../services/logger.service';\nimport useInput from '../../../hooks/use-input';\nimport useHttp from '../../../hooks/use-http';\nimport { CallStatus } from '../../../utilities/constants';\nimport { ActionSVG } from '../../../svgs/Action';\nimport InvalidInputMessage from '../../shared/InvalidInputMessage/InvalidInputMessage';\nimport { PasswordSVG } from '../../../svgs/Password';\nimport StatusAlert from '../../shared/StatusAlert/StatusAlert';\nimport { ShowSVG } from '../../../svgs/Show';\nimport { HideSVG } from '../../../svgs/Hide';\nimport { CloseSVG } from '../../../svgs/Close';\nimport { RootContext } from '../../../store/RootContext';\n\nconst SetPasswordComponent = () => {\n  const rootCtx = useContext(RootContext);\n  const { resetUserPassword, initiateDataLoading } = useHttp();\n  const [hideCurrPassword, setHideCurrPassword] = useState(true);\n  const [hideNewPassword, setHideNewPassword] = useState(true);\n  const [hideConfirmNewPassword, setHideConfirmNewPassword] = useState(true);\n  const [responseStatus, setResponseStatus] = useState(CallStatus.NONE);\n  const [responseMessage, setResponseMessage] = useState('');\n\n  const isValidCurrPassword = (value) => value.trim() !== '';\n  const isValidNewPassword = (value) => value.trim() !== '';\n  const isValidConfirmNewPassword = (value) => value.trim() !== '' && value === newPasswordValue;\n\n  const {\n    value: currPasswordValue,\n    isValid: currPasswordIsValid,\n    hasError: currPasswordHasError,\n    valueChangeHandler: currPasswordChangeHandler,\n    inputBlurHandler: currPasswordBlurHandler,\n    reset: resetCurrPassword,\n  } = useInput(isValidCurrPassword);\n\n  const {\n    value: newPasswordValue,\n    isValid: newPasswordIsValid,\n    hasError: newPasswordHasError,\n    valueChangeHandler: newPasswordChangeHandler,\n    inputBlurHandler: newPasswordBlurHandler,\n    reset: resetNewPassword,\n  } = useInput(isValidNewPassword);\n\n  const {\n    value: confirmNewPasswordValue,\n    isValid: confirmNewPasswordIsValid,\n    hasError: confirmNewPasswordHasError,\n    valueChangeHandler: confirmNewPasswordChangeHandler,\n    inputBlurHandler: confirmNewPasswordBlurHandler,\n    reset: resetConfirmNewPassword,\n  } = useInput(isValidConfirmNewPassword);\n\n  let formIsValid = false;\n\n  if (\n    (rootCtx.authStatus.isValidPassword && currPasswordIsValid && newPasswordIsValid && confirmNewPasswordIsValid)\n    || (!rootCtx.authStatus.isValidPassword && newPasswordIsValid && confirmNewPasswordIsValid)\n  ) {\n    formIsValid = true;\n  };\n  \n  const touchFormControls = () => {\n    currPasswordBlurHandler(null);\n    newPasswordBlurHandler(null);\n    confirmNewPasswordBlurHandler(null);\n  };\n\n  const resetFormValues = () => {\n    resetCurrPassword();\n    resetNewPassword();\n    resetConfirmNewPassword();\n  };\n\n  const resetPasswordHandler = (event) => {\n    touchFormControls();\n    if (!formIsValid) { return; }\n    setResponseStatus(CallStatus.PENDING);\n    setResponseMessage('Resetting Password...');\n    resetUserPassword(rootCtx.authStatus.isValidPassword, rootCtx.authStatus.isValidPassword ? SHA256(currPasswordValue).toString() : '', SHA256(newPasswordValue).toString())\n    .then((response: any) => {\n      logger.info(response);\n      if (response) {\n        setHideCurrPassword(true);\n        setHideNewPassword(true);\n        setHideConfirmNewPassword(true);\n        setResponseStatus(CallStatus.NONE);\n        setResponseMessage('');\n        resetFormValues();\n        initiateDataLoading();\n        rootCtx.setShowModals({...rootCtx.showModals, setPasswordModal: false});\n      } else {\n        setResponseStatus(CallStatus.ERROR);\n        setResponseMessage(response.response.data || response.message || 'Unknown Error');\n      }\n    })\n    .catch(err => {\n      logger.error(err.response?.data || err.message || JSON.stringify(err));\n      setResponseStatus(CallStatus.ERROR);\n      setResponseMessage(err.response && err.response.data && err.response.data.error ? err.response.data.error : err.response?.data || err.message || JSON.stringify(err));\n    });\n  };\n\n  const toggleCurrPasswordVisibility = () => {\n    setHideCurrPassword(!hideCurrPassword);\n  };\n\n  const toggleNewPasswordVisibility = () => {\n    setHideNewPassword(!hideNewPassword);\n  };\n\n  const toggleConfirmNewPasswordVisibility = () => {\n    setHideConfirmNewPassword(!hideConfirmNewPassword);\n  };\n\n  const closeHandler = () => {\n    rootCtx.setShowModals({...rootCtx.showModals, setPasswordModal: false});\n  }\n\n  return (\n    <form className='h-100'>\n      <Modal show={rootCtx.showModals.setPasswordModal} onHide={rootCtx.authStatus.isValidPassword ? closeHandler : ()=>{}} centered className='modal-lg' data-testid='set-password-modal'>\n        <Modal.Header className='d-flex align-items-start justify-content-end pb-0'>\n          { rootCtx.authStatus.isValidPassword\n            ? <span className='span-close-svg' onClick={closeHandler}><CloseSVG /></span>\n            : <></>\n          }\n        </Modal.Header>\n        <Modal.Body className='py-0'>\n          <Row className='d-flex align-items-start justify-content-center'>\n            { rootCtx.authStatus.isValidPassword ?\n              <Col xs={12}>\n                <Form.Label className=' text-dark'>Current Password*</Form.Label>\n                <InputGroup className={(currPasswordHasError ? 'invalid ' : '')}>\n                  <InputGroup.Text className='form-control-addon form-control-addon-left'>\n                    <PasswordSVG />\n                  </InputGroup.Text>\n                  <Form.Control\n                    tabIndex={1}\n                    autoFocus={true}\n                    id='currpassword'\n                    type={hideCurrPassword ? 'password' : 'text'}\n                    placeholder='Current Password'\n                    aria-label='curr-password'\n                    aria-describedby='addon-curr-password'\n                    className={(hideCurrPassword && currPasswordValue !== '') ? 'form-control-middle password-input-ctrl' : 'form-control-middle'}\n                    value={currPasswordValue}\n                    onChange={currPasswordChangeHandler}\n                    onBlur={currPasswordBlurHandler}\n                  />\n                  <InputGroup.Text className={'form-control-addon form-control-addon-right'}>\n                    <span onClick={() => toggleCurrPasswordVisibility()}>{hideCurrPassword ? <ShowSVG /> : <HideSVG />}</span>\n                  </InputGroup.Text>\n                </InputGroup>\n                {(currPasswordHasError) ?\n                    <InvalidInputMessage message={'Invalid Current Password'} />\n                  :\n                    <div className='message'></div>\n                }\n              </Col>\n              :\n              <></>\n            }\n            <Col xs={12}>\n              <Form.Label className=' text-dark'>New Password*</Form.Label>\n              <InputGroup className={(newPasswordHasError ? 'invalid ' : '')}>\n                <InputGroup.Text className='form-control-addon form-control-addon-left'>\n                  <PasswordSVG />\n                </InputGroup.Text>\n                <Form.Control\n                  tabIndex={1}\n                  autoFocus={!rootCtx.authStatus.isValidPassword}\n                  id='newpassword'\n                  type={hideNewPassword ? 'password' : 'text'}\n                  placeholder='New Password'\n                  aria-label='new-password'\n                  aria-describedby='addon-new-password'\n                  className={(hideNewPassword && newPasswordValue !== '') ? 'form-control-middle password-input-ctrl' : 'form-control-middle'}\n                  value={newPasswordValue}\n                  onChange={newPasswordChangeHandler}\n                  onBlur={newPasswordBlurHandler}\n                />\n                <InputGroup.Text className={'form-control-addon form-control-addon-right'}>\n                  <span onClick={() => toggleNewPasswordVisibility()}>{hideNewPassword ? <ShowSVG /> : <HideSVG />}</span>\n                </InputGroup.Text>\n              </InputGroup>\n              {(newPasswordHasError) ?\n                  <InvalidInputMessage message={'Invalid New Password'} />\n                :\n                  <div className='message'></div>\n              }\n            </Col>\n            <Col xs={12}>\n              <Form.Label className=' text-dark'>Confirm New Password*</Form.Label>\n              <InputGroup className={(confirmNewPasswordHasError ? 'invalid ' : '')}>\n                <InputGroup.Text className='form-control-addon form-control-addon-left'>\n                  <PasswordSVG />\n                </InputGroup.Text>\n                <Form.Control\n                  tabIndex={2}\n                  id='confirmnewpassword'\n                  type={hideConfirmNewPassword ? 'password' : 'text'}\n                  placeholder='Confirm New Password'\n                  aria-label='confirm-new-password'\n                  aria-describedby='addon-confirm-new-password'\n                  className={(hideConfirmNewPassword && confirmNewPasswordValue !== '') ? 'form-control-middle password-input-ctrl' : 'form-control-middle'}\n                  value={confirmNewPasswordValue}\n                  onChange={confirmNewPasswordChangeHandler}\n                  onBlur={confirmNewPasswordBlurHandler}\n                />\n                <InputGroup.Text className={'form-control-addon form-control-addon-right'}>\n                  <span onClick={() => toggleConfirmNewPasswordVisibility()}>{hideConfirmNewPassword ? <ShowSVG /> : <HideSVG />}</span>\n                </InputGroup.Text>\n              </InputGroup>\n              {(confirmNewPasswordHasError) ?\n                  <InvalidInputMessage message={confirmNewPasswordValue !== newPasswordValue ? 'New and Confirm New Password Do Not Match' : 'Invalid Confirm New Password'} />\n                :\n                  <div className='message'></div>\n              }\n            </Col>\n          </Row>\n          <StatusAlert responseStatus={responseStatus} responseMessage={responseMessage} />\n        </Modal.Body>\n        <Modal.Footer>\n          <button tabIndex={3} type='button' className='btn-rounded bg-primary' onClick={resetPasswordHandler} disabled={responseStatus === CallStatus.PENDING}>\n            { rootCtx.authStatus.isValidPassword ? 'Reset Password' : 'Set Password' }\n            {responseStatus === CallStatus.PENDING ? <Spinner className='mt-1 ms-2 text-white-dark' size='sm' /> : <ActionSVG className='ms-3' />}\n          </button>\n        </Modal.Footer>\n      </Modal>\n    </form>\n  );\n}\n\nexport default SetPasswordComponent;\n","import React from 'react';\n\nimport './App.scss';\nimport { useContext, useEffect } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\n\nimport useHttp from '../../hooks/use-http';\nimport useBreakpoint from '../../hooks/use-breakpoint';\nimport { RootContext } from '../../store/RootContext';\nimport { CLNContext } from '../../store/CLNContext';\nimport { ApplicationModes } from '../../utilities/constants';\nimport ToastMessage from '../shared/ToastMessage/ToastMessage';\nimport NodeInfo from '../modals/NodeInfo/NodeInfo';\nimport ConnectWallet from '../modals/ConnectWallet/ConnectWallet';\nimport LoginComponent from '../modals/Login/Login';\nimport LogoutComponent from '../modals/Logout/Logout';\nimport SetPasswordComponent from '../modals/SetPassword/SetPassword';\nimport logger from '../../services/logger.service';\nimport { AuthResponse } from '../../types/app-config.type';\nimport { EmptyHome } from '../ui/Loading/Loading';\n\nfunction App() {\n  const rootCtx = useContext(RootContext);\n  const clnCtx = useContext(CLNContext);\n  const currentScreenSize = useBreakpoint();\n  const { setCSRFToken, getAppConfigurations, getAuthStatus, initiateDataLoading } = useHttp();\n\n  const bodyHTML = document.getElementsByTagName('body')[0];\n  const htmlAttributes = bodyHTML.attributes;\n  const theme = document.createAttribute('data-bs-theme');\n  theme.value = rootCtx.appConfig.uiConfig.appMode?.toLowerCase() || 'dark';\n  bodyHTML.style.backgroundColor =\n    rootCtx.appConfig.uiConfig.appMode === ApplicationModes.LIGHT ? '#EBEFF9' : '#0C0C0F';\n  const screensize = document.createAttribute('data-screensize');\n  screensize.value = currentScreenSize;\n  htmlAttributes.setNamedItem(theme);\n  htmlAttributes.setNamedItem(screensize);\n\n  useEffect(() => {\n    Promise.all([\n      setCSRFToken(),\n      getAppConfigurations()\n    ])\n      .then(([isCsrfSet, config]: [any, any]) => {\n        if (isCsrfSet) {\n          getAuthStatus().then((authStatus: AuthResponse) => {\n            if (!authStatus.isAuthenticated) {\n              if (authStatus.isValidPassword) {\n                rootCtx.setShowModals({ ...rootCtx.showModals, loginModal: true });\n              } else {\n                rootCtx.setShowModals({ ...rootCtx.showModals, setPasswordModal: true });\n              }\n            } else {\n              if (authStatus.isValidPassword) {\n                initiateDataLoading();\n              } else {\n                logger.error(authStatus);\n                clnCtx.setNodeInfo({ isLoading: false, error: JSON.stringify(authStatus) });\n              }\n            }\n          });\n        } else {\n          logger.error(isCsrfSet);\n          clnCtx.setNodeInfo({ isLoading: false, error: typeof isCsrfSet === 'object' ? JSON.stringify(isCsrfSet) : isCsrfSet });\n        }\n      }).catch(err => {\n        logger.error(err);\n        if (err.response && err.response.data) {\n          clnCtx.setNodeInfo({ isLoading: false, error: err.response.data });\n        } else if (!err.response && err.message) {\n          clnCtx.setNodeInfo({ isLoading: false, error: err.message })\n        } else {\n          clnCtx.setNodeInfo({ isLoading: false, error: JSON.stringify(err) });\n        }\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <Container className={rootCtx.authStatus.isAuthenticated ? 'py-4' : 'py-4 blurred-container'} id='root-container' data-testid='container'>\n        {rootCtx.authStatus.isAuthenticated ?\n          <Outlet />\n          :\n          <EmptyHome />\n        }\n      </Container>\n      <ToastMessage />\n      <NodeInfo />\n      <ConnectWallet />\n      <LoginComponent />\n      <LogoutComponent />\n      <SetPasswordComponent />\n    </>\n  );\n}\n\nexport default App;\n"],"names":["NodeInfo","rootCtx","useContext","RootContext","clnCtx","CLNContext","nodeURI","setNodeURI","useState","useEffect","_clnCtx$nodeInfo$addr","_clnCtx$nodeInfo$bind","uri","nodeInfo","id","address","length","port","binding","copyHandler","copyTextToClipboard","then","response","setShowToast","show","message","bg","catch","err","logger","error","closeHandler","setShowModals","showModals","nodeInfoModal","_jsxs","Modal","onHide","centered","className","children","_jsx","Header","onClick","CloseSVG","Body","Row","AnimatePresence","motion","img","alt","src","appConfig","uiConfig","appMode","ApplicationModes","DARK","initial","opacity","animate","transition","delay","duration","QRCodeCanvas","value","size","includeMargin","bgColor","fgColor","InputGroup","Form","Control","placeholder","readOnly","Text","CopySVG","AddSVG","props","OverlayTrigger","placement","hide","overlay","showTooltip","Tooltip","tooltipText","_Fragment","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","ConnectWallet","_connectValues$invoic","_connectValues$invoic2","_connectValues$invoic3","_connectValues$invoic4","_rootCtx$walletConnec5","_rootCtx$walletConnec6","_connectValues$client","_connectValues$client2","_connectValues$client3","_connectValues$client4","_connectValues$client5","_connectValues$client6","_connectValues$client7","_connectValues$client8","_rootCtx$walletConnec7","_rootCtx$walletConnec8","_connectValues$caCert","_connectValues$caCert2","_connectValues$caCert3","_connectValues$caCert4","_connectValues$connec","_connectValues$connec2","_connectValues$connec3","_connectValues$connec4","createInvoiceRune","useHttp","networkTypes","setNetworkTypes","selNetwork","setSelNetwork","connectUrl","setConnectUrl","connectValues","setConnectValues","title","field","host","rune","invoiceRune","isLoadingInvoiceRune","setIsLoadingInvoiceRune","newNetworkTypes","walletConnect","LIGHTNING_REST_PORT","push","TOR_SERVICE","LIGHTNING_GRPC_PORT","DEVICE_DOMAIN_NAME","LIGHTNING_WS_PORT","COMMANDO_RUNE","INVOICE_RUNE","event","textToCopy","target","includes","CLIENT_KEY","CLIENT_CERT","CA_CERT","createInvoiceRuneHandler","JSON","stringify","finally","connectWalletModal","networkChangeHandler","_rootCtx$walletConnec","_rootCtx$walletConnec2","_rootCtx$walletConnec3","_rootCtx$walletConnec4","protocol","clientKey","clientCert","caCert","LIGHTNING_REST_PROTOCOL","toLowerCase","LIGHTNING_GRPC_PROTOCOL","invoiceRuneClickHandler","InvoiceRuneSvg","Col","xs","Label","Dropdown","Toggle","variant","Menu","map","type","Item","as","disabled","undefined","Spinner","PasswordSVG","ShowSVG","HideSVG","LoginComponent","userLogin","initiateDataLoading","hidePassword","setHidePassword","responseStatus","setResponseStatus","CallStatus","NONE","responseMessage","setResponseMessage","passwordValue","isValid","passwordIsValid","hasError","passwordHasError","valueChangeHandler","passwordChangeHandler","inputBlurHandler","passwordBlurHandler","reset","resetPassword","useInput","trim","formIsValid","loginModal","tabIndex","autoFocus","onChange","onBlur","InvalidInputMessage","StatusAlert","Footer","PENDING","SHA256","toString","info","ERROR","data","_err$response","_err$response2","ActionSVG","LogoutComponent","userLogout","logoutHandler","logoutModal","QuestionMarkSVG","SetPasswordComponent","resetUserPassword","hideCurrPassword","setHideCurrPassword","hideNewPassword","setHideNewPassword","hideConfirmNewPassword","setHideConfirmNewPassword","currPasswordValue","currPasswordIsValid","currPasswordHasError","currPasswordChangeHandler","currPasswordBlurHandler","resetCurrPassword","newPasswordValue","newPasswordIsValid","newPasswordHasError","newPasswordChangeHandler","newPasswordBlurHandler","resetNewPassword","confirmNewPasswordValue","confirmNewPasswordIsValid","confirmNewPasswordHasError","confirmNewPasswordChangeHandler","confirmNewPasswordBlurHandler","resetConfirmNewPassword","authStatus","isValidPassword","setPasswordModal","_rootCtx$appConfig$ui","currentScreenSize","useBreakpoint","setCSRFToken","getAppConfigurations","getAuthStatus","bodyHTML","document","getElementsByTagName","htmlAttributes","attributes","theme","createAttribute","style","backgroundColor","LIGHT","screensize","setNamedItem","Promise","all","_ref","isCsrfSet","config","isAuthenticated","setNodeInfo","isLoading","Container","Outlet","EmptyHome","ToastMessage"],"sourceRoot":""}