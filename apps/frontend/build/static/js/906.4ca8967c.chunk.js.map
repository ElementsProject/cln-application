{"version":3,"file":"static/js/906.4ca8967c.chunk.js","mappings":"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","sources":["components/cln/CLNOffer/CLNOffer.tsx","components/cln/CLNOffersList/CLNOffersList.tsx"],"sourcesContent":["import './CLNOffer.scss';\nimport { motion } from 'framer-motion';\nimport { Row, Col } from 'react-bootstrap';\n\nimport { CopySVG } from '../../../svgs/Copy';\nimport { TRANSITION_DURATION } from '../../../utilities/constants';\nimport { copyTextToClipboard } from '../../../utilities/data-formatters';\nimport logger from '../../../services/logger.service';\nimport { setShowToast } from '../../../store/rootSlice';\nimport { useDispatch } from 'react-redux';\n\nconst OfferDetail = ({ offer, copyHandler }) => {\n  return (\n    <>\n      {offer.bolt12 ? (\n        <Row className=\"cln-offer-detail\" data-testid=\"cln-offer-detail\">\n          <Col xs={12} className=\"fs-7 text-light\">\n            Bolt 12\n          </Col>\n          <Col xs={11} className=\"pe-1 fs-7 overflow-x-ellipsis\">\n            {offer.bolt12}\n          </Col>\n          <Col xs={1} onClick={copyHandler} className=\"cln-offer-copy\" id=\"Bolt12\">\n            <CopySVG id=\"Bolt12\" showTooltip={true} />\n          </Col>\n        </Row>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n};\n\nconst CLNOffer = (props) => {\n  const dispatch = useDispatch();\n  \n  const copyHandler = (event) => {\n    let textToCopy = '';\n    switch (event.target.id) {\n      case 'Bolt12':\n        textToCopy = props.offer.bolt12;\n        break;\n      default:\n        textToCopy = props.offer.bolt12;\n        break;\n    }\n    copyTextToClipboard(textToCopy).then(() => {\n      dispatch(setShowToast({show: true, message: (event.target.id + ' Copied Successfully!'), bg: 'success'}));\n    }).catch((err) => {\n      logger.error(err);\n    });\n  }\n\n  return (\n    <motion.div\n      variants={{ collapsed: { scale: 0.8, opacity: 0 }, open: { scale: 1, opacity: 1 } }}\n      transition={{ duration: TRANSITION_DURATION }}\n      className=\"cln-offer-placeholder pb-2\"\n      data-testid='cln-offer-placeholder'\n    >\n      <OfferDetail offer={props.offer} copyHandler={copyHandler} />\n    </motion.div>\n  );\n};\n\nexport default CLNOffer;\n","import './CLNOffersList.scss';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Row, Col, Spinner, Alert } from 'react-bootstrap';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n\nimport { IncomingArrowSVG } from '../../../svgs/IncomingArrow';\nimport Offer from '../CLNOffer/CLNOffer';\nimport { SCROLL_BATCH_SIZE, SCROLL_THRESHOLD, TRANSITION_DURATION } from '../../../utilities/constants';\nimport { NoCLNTransactionLightSVG } from '../../../svgs/NoCLNTransactionLight';\nimport { NoCLNTransactionDarkSVG } from '../../../svgs/NoCLNTransactionDark';\nimport { useSelector } from 'react-redux';\nimport { selectListOffers } from '../../../store/clnSelectors';\nimport { selectIsAuthenticated, selectIsDarkMode } from '../../../store/rootSelectors';\n\nconst OfferHeader = ({ offer }) => {\n  return (\n    <Row className=\"offer-list-item d-flex justify-content-between align-items-center\">\n      <Col xs={2}>\n        <IncomingArrowSVG className=\"me-1\" txStatus={offer.used ? 'used' : 'unused'} />\n      </Col>\n      <Col xs={10}>\n        <Row className=\"d-flex justify-content-between align-items-center\">\n          <Col xs={12} className=\"ps-2 d-flex align-items-center\">\n            <span className=\"text-dark fw-bold overflow-x-ellipsis\">\n              {offer.label || offer.offer_id}\n            </span>\n          </Col>\n        </Row>\n        <Row className=\"d-flex justify-content-between align-items-center\">\n          <Col xs={8} className=\"ps-2 pe-0 fs-7 text-light d-flex flex-row align-items-center\">\n            <span className=\"text-dark fw-bold overflow-x-ellipsis\">\n              {offer.active ? 'Active' : 'Inactive'}\n            </span>\n          </Col>\n          <Col\n            xs={4}\n            className=\"ps-0 fs-7 text-light d-flex align-items-center justify-content-end\"\n          >\n            <span className=\"text-dark fw-bold overflow-x-ellipsis\">\n              {offer.single_use ? 'Single Use' : 'Multi Use'}\n            </span>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  );\n};\n\nconst CLNOffersAccordion = ({\n  i,\n  expanded,\n  setExpanded,\n  initExpansions,\n  offer,\n}) => {\n  const isDarkMode = useSelector(selectIsDarkMode);\n  return (\n    <>\n      <motion.div\n        data-testid='cln-offer-header'\n        className={'cln-offer-header ' + (expanded[i] ? 'expanded' : '')}\n        initial={false}\n        animate={{ backgroundColor: (isDarkMode ? (expanded[i] ? '#0C0C0F' : '#2A2A2C') : (expanded[i] ? '#EBEFF9' : '#FFFFFF')) }}\n        transition={{ duration: TRANSITION_DURATION }}\n        onClick={() => {\n          initExpansions[i] = !expanded[i];\n          return setExpanded(initExpansions);\n        }}\n      >\n        <OfferHeader offer={offer} />\n      </motion.div>\n      <AnimatePresence initial={false}>\n        {expanded[i] && (\n          <motion.div\n            data-testid='cln-offer-details'\n            className='cln-offer-details'\n            key='content'\n            initial='collapsed'\n            animate='open'\n            exit='collapsed'\n            variants={{\n              open: { opacity: 1, height: 'auto' },\n              collapsed: { opacity: 0, height: 0 },\n            }}\n            transition={{ duration: TRANSITION_DURATION, ease: [0.4, 0.52, 0.83, 0.98] }}\n          >\n            <Offer offer={offer} />\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </>\n  );\n};\n\nexport const CLNOffersList = () => {\n  const isDarkMode = useSelector(selectIsDarkMode);\n  const isAuthenticated = useSelector(selectIsAuthenticated);\n  const listOffers = useSelector(selectListOffers);\n  const initExpansions = (listOffers.offers?.reduce((acc: boolean[]) => [...acc, false], []) || []);\n  const [expanded, setExpanded] = useState<boolean[]>(initExpansions);\n\n  const [displayedOffers, setDisplayedOffers] = useState<any[]>([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [allOffersLoaded, setAllOffersLoaded] = useState(false);\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const setContainerRef = useCallback((ref: HTMLElement | null) => {\n    if (ref) {\n      (containerRef as React.MutableRefObject<HTMLElement | null>).current = ref;\n    }\n  }, []);\n\n  useEffect(() => {\n    if (listOffers && listOffers.offers && listOffers.offers.length > 0) {\n      const initialBatch = listOffers.offers.slice(0, SCROLL_BATCH_SIZE);\n      setDisplayedOffers(initialBatch);\n      setCurrentIndex(SCROLL_BATCH_SIZE);\n      if (SCROLL_BATCH_SIZE >= listOffers?.offers?.length) {\n        setAllOffersLoaded(true);\n      }\n    }\n  }, [listOffers]);\n\n  const loadMoreTransactions = useCallback(() => {\n    if (isLoading || allOffersLoaded) return;\n    setIsLoading(true);\n    setTimeout(() => {\n      const nextIndex = currentIndex + SCROLL_BATCH_SIZE;\n      const newOffers = listOffers?.offers?.slice(\n        currentIndex,\n        nextIndex\n      ) || [];\n      setDisplayedOffers(prev => [...prev, ...newOffers]);\n      setCurrentIndex(nextIndex);\n\n      if (listOffers && listOffers.offers && nextIndex >= listOffers?.offers?.length) {\n        setAllOffersLoaded(true);\n      }\n\n      setIsLoading(false);\n    }, 300);\n  }, [currentIndex, isLoading, allOffersLoaded, listOffers]);\n\n  const handleScroll = useCallback((container) => {\n    if (!container || isLoading || allOffersLoaded) return;\n    \n    const { scrollTop, scrollHeight, clientHeight } = container;\n    const bottomOffset = scrollHeight - scrollTop - clientHeight;\n    \n    if (bottomOffset < SCROLL_THRESHOLD) {\n      loadMoreTransactions();\n    }\n  }, [isLoading, allOffersLoaded, loadMoreTransactions]);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (container) {\n      container?.addEventListener('scroll', handleScroll);\n      return () => container?.removeEventListener('scroll', handleScroll);\n    }\n  }, [handleScroll]);\n\n  return (\n    isAuthenticated && listOffers.isLoading ?\n      <span className='h-100 d-flex justify-content-center align-items-center'>\n        <Spinner animation='grow' variant='primary' data-testid='cln-offers-list-spinner'/>\n      </span> \n    : \n    listOffers.error ? \n      <Alert className='py-0 px-1 fs-7' variant='danger' data-testid='cln-offers-list-error'>{listOffers.error}</Alert> : \n      listOffers?.offers && listOffers?.offers.length && listOffers?.offers.length > 0 ?\n        <PerfectScrollbar\n        containerRef={setContainerRef}\n        onScrollY={handleScroll}\n        className='cln-offers-list'\n        data-testid='cln-offers-list'\n        options={{\n          suppressScrollX: true,\n          wheelPropagation: false\n        }}\n        >\n          {displayedOffers.map((offer, i) => (\n            <CLNOffersAccordion key={i} i={i} expanded={expanded} setExpanded={setExpanded} initExpansions={initExpansions} offer={offer} />\n          ))}\n          {isLoading && (\n            <Col xs={12} className='d-flex align-items-center justify-content-center mb-5'>\n              <Spinner animation='grow' variant='primary' />\n            </Col>\n          )}\n          {allOffersLoaded && listOffers?.offers.length > 100 && \n            <h6 className='d-flex align-self-center py-4 text-muted'>No more offers to load!</h6>\n          }\n        </PerfectScrollbar>\n      :\n        <Row className='text-light fs-6 h-75 mt-5 align-items-center justify-content-center'>\n          <Row className='d-flex align-items-center justify-content-center mt-2'>\n            { isDarkMode ? \n              <NoCLNTransactionDarkSVG className='no-clntx-dark pb-1' /> :\n              <NoCLNTransactionLightSVG className='no-clntx-light pb-1' />\n            }\n            <Row className='text-center'>No offer found. Click receive to generate new offer!</Row>\n          </Row>\n        </Row>\n  );\n};\n\nexport default CLNOffersList;\n"],"names":["OfferDetail","_ref","offer","copyHandler","_jsx","_Fragment","children","bolt12","_jsxs","Row","className","Col","xs","onClick","id","CopySVG","showTooltip","props","dispatch","useDispatch","motion","div","variants","collapsed","scale","opacity","open","transition","duration","TRANSITION_DURATION","event","textToCopy","target","copyTextToClipboard","then","setShowToast","show","message","bg","catch","err","logger","error","OfferHeader","IncomingArrowSVG","txStatus","used","label","offer_id","active","single_use","CLNOffersAccordion","_ref2","i","expanded","setExpanded","initExpansions","isDarkMode","useSelector","selectIsDarkMode","initial","animate","backgroundColor","AnimatePresence","exit","height","ease","Offer","CLNOffersList","_listOffers$offers","isAuthenticated","selectIsAuthenticated","listOffers","selectListOffers","offers","reduce","acc","useState","displayedOffers","setDisplayedOffers","currentIndex","setCurrentIndex","isLoading","setIsLoading","allOffersLoaded","setAllOffersLoaded","containerRef","useRef","setContainerRef","useCallback","ref","current","useEffect","length","_listOffers$offers2","initialBatch","slice","SCROLL_BATCH_SIZE","loadMoreTransactions","setTimeout","_listOffers$offers3","_listOffers$offers4","nextIndex","newOffers","prev","handleScroll","container","scrollTop","scrollHeight","clientHeight","SCROLL_THRESHOLD","addEventListener","removeEventListener","Spinner","animation","variant","Alert","PerfectScrollbar","onScrollY","options","suppressScrollX","wheelPropagation","map","NoCLNTransactionDarkSVG","NoCLNTransactionLightSVG"],"sourceRoot":""}